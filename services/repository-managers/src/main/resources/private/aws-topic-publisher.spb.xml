<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Turn on Spring's auotproxy using AspectJ's @Aspect annotations. -->
	<aop:aspectj-autoproxy />

	<!-- Create the AWS search client using the current credentials. Prototype 
		because we want a new one for each bean -->
	<bean id="awsSNSClient" class="com.amazonaws.services.sns.AmazonSNSClient"
		scope="prototype">
		<constructor-arg ref="awsCredentials" />
	</bean>

	<!-- The AmazonSQSClient -->
	<bean id="awsSQSClient" class="com.amazonaws.services.sqs.AmazonSQSClient"
		scope="singleton">
		<constructor-arg ref="awsCredentials" />
	</bean>


	<!-- The RepositoryMessagePublisher publish repository change messages to 
		an AWS topic -->
	<bean id="messagePublisher"
		class="org.sagebionetworks.repo.manager.message.RepositoryMessagePublisherImpl"
		init-method="initialize">
		<constructor-arg type="java.lang.String">
			<ref bean="stackConfiguration.repositoryChangeTopicPrefix" />
		</constructor-arg>
		<constructor-arg type="java.lang.String">
			<ref bean="stackConfiguration.repositoryModificationTopicName" />
		</constructor-arg>
		<property name="shouldMessagesBePublishedToTopic"
			ref="stackConfiguration.shouldMessagesBePublishedToTopic"></property>
	</bean>
	
	<!-- The RemoteFilePreviewMessagePublisher publishes RemoteFilePreviewGenerationRequest messages to an SNS topic -->
	<bean
		id="remoteFilePreviewGenerationReqMessageQueue"
		class="org.sagebionetworks.workers.util.aws.message.MessageQueueImpl"
		depends-on="stackConfiguration" >
		<constructor-arg index="0" ref="awsSQSClient" />
		<constructor-arg index="1" ref="awsSNSClient" />
		<constructor-arg index="2">
			<bean class="org.sagebionetworks.workers.util.aws.message.MessageQueueConfiguration">
				<property name="queueName"
					ref="stackConfiguration.remoteFilePreviewGeneratorQueueName" />
				<property name="enabled" value="true" />
				<property name="deadLetterQueueName"
					ref="stackConfiguration.remoteFilePreviewGeneratorDeadLetterQueueName" />
				<property name="maxFailureCount" value="5" />
				<property name="defaultMessageVisibilityTimeoutSec" value="500" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean
		id="remoteFilePreviewMessagePublisher"
		class="org.sagebionetworks.repo.manager.message.RemoteFilePreviewMessagePublisherImpl">
		<constructor-arg>
			<ref bean="sqsClient" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="snsClient" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="remoteFilePreviewGenerationReqMessageQueue" />
		</constructor-arg>
		<property name="publishToTopicEnabled"
			ref="stackConfiguration.remoteFilePreviewMessagePublishToTopicEnabled">
		</property>
	</bean>

	<!-- This is how messages get rebroadcast -->
	<bean id="messageSyndication"
		class="org.sagebionetworks.repo.manager.message.MessageSyndicationImpl" />

</beans>